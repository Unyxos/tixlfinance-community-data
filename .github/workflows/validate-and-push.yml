name: Push projects, exchanges, blogs, influencer and news-provider to server

on:
  push:
    branches:
      - master

jobs:
  validate-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: NPM Install
        run: npm install
        shell: bash
      - name: Validate Files
        run: npm run validate && npm run lint
        shell: bash
  push-project-files:
    needs: validate-files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: NPM Install
        run: npm install
        shell: bash
      - id: files
        uses: jitterbit/get-changed-files@v1
      - name: Push assets to server
        env:
          API_ASSETS_KEY: ${{ secrets.API_ASSETS_KEY }}
          MAIN_API_ENDPOINT: ${{ secrets.MAIN_API_ENDPOINT }}
        run: |
          npm run push:projects --files ${{ steps.files.outputs.all }}
        shell: bash
  remove-preview-projects:
    needs: validate-files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: NPM Install
        run: npm install
        shell: bash
      - id: files
        uses: jitterbit/get-changed-files@v1
      - name: Remove PR preview asset from server
        env:
          API_ASSETS_KEY: ${{ secrets.API_ASSETS_KEY }}
          MAIN_API_ENDPOINT: ${{ secrets.MAIN_API_ENDPOINT }}
        run: |
          npm run remove:projects:preview --files ${{ steps.files.outputs.all }}
        shell: bash
  push-exchange-files:
    needs: validate-files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: NPM Install
        run: npm install
        shell: bash
      - id: files
        uses: jitterbit/get-changed-files@v1
      - name: Push assets to server
        env:
          API_ASSETS_KEY: ${{ secrets.API_ASSETS_KEY }}
          MAIN_API_ENDPOINT: ${{ secrets.MAIN_API_ENDPOINT }}
        run: |
          npm run push:exchanges --files ${{ steps.files.outputs.all }}
        shell: bash
  push-blog-files:
    needs: validate-files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: NPM Install
        run: npm install
        shell: bash
      - id: files
        uses: jitterbit/get-changed-files@v1
      - name: Push assets to server
        env:
          API_ASSETS_KEY: ${{ secrets.API_ASSETS_KEY }}
          MAIN_API_ENDPOINT: ${{ secrets.MAIN_API_ENDPOINT }}
        run: |
          npm run push:blogs --files ${{ steps.files.outputs.all }}
        shell: bash
  push-categories-files:
    needs: validate-files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: NPM Install
        run: npm install
        shell: bash
      - id: files
        uses: jitterbit/get-changed-files@v1
      - name: Push assets to server
        env:
          API_ASSETS_KEY: ${{ secrets.API_ASSETS_KEY }}
          MAIN_API_ENDPOINT: ${{ secrets.MAIN_API_ENDPOINT }}
        run: |
          npm run push:categories --files ${{ steps.files.outputs.all }}
        shell: bash
  push-influencers-files:
    needs: validate-files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: NPM Install
        run: npm install
        shell: bash
      - id: files
        uses: jitterbit/get-changed-files@v1
      - name: Push assets to server
        env:
          API_ASSETS_KEY: ${{ secrets.API_ASSETS_KEY }}
          MAIN_API_ENDPOINT: ${{ secrets.MAIN_API_ENDPOINT }}
        run: |
          npm run push:influencers --files ${{ steps.files.outputs.all }}
        shell: bash
  push-newsprovider-files:
    needs: validate-files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: NPM Install
        run: npm install
        shell: bash
      - id: files
        uses: jitterbit/get-changed-files@v1
      - name: Push assets to server
        env:
          API_ASSETS_KEY: ${{ secrets.API_ASSETS_KEY }}
          MAIN_API_ENDPOINT: ${{ secrets.MAIN_API_ENDPOINT }}
        run: |
          npm run push:newsprovider --files ${{ steps.files.outputs.all }}
        shell: bash
